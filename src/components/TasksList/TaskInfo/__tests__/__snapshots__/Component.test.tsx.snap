// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskInfo component Is matches snapshot 1`] = `
<Fragment>
  <WithStyles(WithStyles(ForwardRef(ExpansionPanel)))
    component="li"
    expanded={false}
    square={true}
  >
    <WithStyles(WithStyles(ForwardRef(ExpansionPanelSummary)))
      aria-controls="panel0d-content"
      id="panel0d-header"
    >
      <WithStyles(ForwardRef(Typography))
        color="initial"
        data-testid="task-info-panel-summary-text"
      >
        Завдання №1
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(WithStyles(ForwardRef(ExpansionPanelSummary)))>
    <WithStyles(WithStyles(ForwardRef(ExpansionPanelDetails)))>
      <WithStyles(ForwardRef(Grid))
        className="makeStyles-grid-1"
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(Typography))>
            Тип завдання: 
            одна правильна відповідь
          </WithStyles(ForwardRef(Typography))>
          <Component
            answer={0}
            answersAmount={1}
            setAnswersAmount={[MockFunction]}
            setTaskAnswer={[MockFunction]}
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <div
            className="makeStyles-imageWrapper-3"
          >
            <WithStyles(ForwardRef(Typography))>
              Зображення завдання: 
              зображення не завантажено.
            </WithStyles(ForwardRef(Typography))>
          </div>
          <div
            className="makeStyles-imageWrapper-3"
          >
            <WithStyles(ForwardRef(Typography))>
              Зображення пояснення: 
              зображення не завантажено.
            </WithStyles(ForwardRef(Typography))>
          </div>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(WithStyles(ForwardRef(ExpansionPanelDetails)))>
    <WithStyles(WithStyles(ForwardRef(ExpansionPanelActions)))>
      <WithStyles(ForwardRef(Button))
        color="primary"
        disableElevation={true}
        onClick={[Function]}
        variant="contained"
      >
        Редагувати
      </WithStyles(ForwardRef(Button))>
      <WithStyles(WithStyles(ForwardRef(Button)))
        disableElevation={true}
        onClick={[MockFunction]}
        variant="contained"
      >
        Видалити
      </WithStyles(WithStyles(ForwardRef(Button)))>
    </WithStyles(WithStyles(ForwardRef(ExpansionPanelActions)))>
  </WithStyles(WithStyles(ForwardRef(ExpansionPanel)))>
  <Connect(Component)
    deleteExplanationImage={[MockFunction]}
    deleteTaskImage={[MockFunction]}
    explanationImage={null}
    onClose={[Function]}
    open={false}
    setExplanationImage={[MockFunction]}
    setTaskImage={[MockFunction]}
    taskImage={null}
    uploadImageType="task"
  />
</Fragment>
`;
